FUNCTION_BLOCK FuzzyGhosts	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	PACMAN_distance : REAL;
	
	GHOST_AREA_X_distance : REAL;
	GHOST_AREA_Y_distance : REAL;
	
	reliable_POSITION : REAL;
END_VAR


//-------------------------------------------------------------------------------


VAR_OUTPUT				// Define output variable
	goToPacman : REAL;
	stayInArea : REAL;
END_VAR


//-------------------------------------------------------------------------------


// Perseguir a Pac Man

FUZZIFY PACMAN_distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (60, 0) ; 
	TERM medium := gauss 75 25;
	TERM far := (90, 0) (150, 1) (200, 1);
END_FUZZIFY


// Controlar areas

FUZZIFY GHOST_AREA_X_distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (15, 1) (20, 0); 
	TERM medium := gauss 25 5;
	TERM far := (25, 0) (35, 1) (200, 1);
END_FUZZIFY

FUZZIFY GHOST_AREA_Y_distance			// Fuzzify input variable 'service': {'poor', 'good' , 'excellent'}
	TERM near := (0, 1) (20, 1) (25, 0) ; 
	TERM medium := gauss 30 5;
	TERM far := (30, 0) (40, 1) (200, 1);
END_FUZZIFY


//Reliability

FUZZIFY reliable_POSITION
	TERM high := (0, 1) (2, 0);
	TERM medium := gauss 2 1;
	TERM low := (2, 0) (4, 1);	
END_FUZZIFY

//-------------------------------------------------------------------------------


DEFUZZIFY goToPacman			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervous := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)	
END_DEFUZZIFY

DEFUZZIFY stayInArea			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervous := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)	
END_DEFUZZIFY


//-------------------------------------------------------------------------------


RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)
	
	
	// goToPacman
	
	RULE 1 : IF ((PACMAN_distance IS near) AND (reliable_POSITION is high)) THEN goToPacman IS emergency;
	RULE 2 : IF ((PACMAN_distance IS near) AND (reliable_POSITION is medium)) THEN goToPacman IS emergency;
	RULE 3 : IF ((PACMAN_distance IS near) AND (reliable_POSITION is low)) THEN goToPacman IS nervous;
	
	RULE 4 : IF ((PACMAN_distance IS medium) AND (reliable_POSITION is high)) THEN goToPacman IS emergency;
	RULE 5 : IF ((PACMAN_distance IS medium) AND (reliable_POSITION is medium)) THEN goToPacman IS nervous;
	RULE 6 : IF ((PACMAN_distance IS medium) AND (reliable_POSITION is low)) THEN goToPacman IS calm;
	
	RULE 7 : IF ((PACMAN_distance IS far) AND (reliable_POSITION is high)) THEN goToPacman IS nervous;	
	RULE 8 : IF ((PACMAN_distance IS far) AND (reliable_POSITION is medium)) THEN goToPacman IS nervous;	
	RULE 9 : IF ((PACMAN_distance IS far) AND (reliable_POSITION is low)) THEN goToPacman IS calm;	
	
	// stayInArea
	
	RULE 10 : IF GHOST_AREA_X_distance IS far THEN stayInArea IS emergency;
	RULE 11 : IF GHOST_AREA_Y_distance IS far THEN stayInArea IS emergency;
	
	RULE 12 : IF GHOST_AREA_X_distance IS medium THEN stayInArea IS nervous;
	RULE 13 : IF GHOST_AREA_Y_distance IS medium THEN stayInArea IS nervous;
	
	RULE 14 : IF GHOST_AREA_X_distance IS near THEN stayInArea IS calm;
	RULE 15 : IF GHOST_AREA_Y_distance IS near THEN stayInArea IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK

